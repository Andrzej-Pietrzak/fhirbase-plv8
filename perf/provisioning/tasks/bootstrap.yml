- name: Add PostgreSQL APT repository
  apt_repository: repo="{{ item }}" state=present
  with_items:
    - deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main

- name: Apt update
  apt: update_cache=true

- name: Set locale before install PostgreSQL
  shell: "{{ item }}"
  with_items:
    - apt-get install --reinstall locales
    - dpkg-reconfigure locales
    - locale-gen en_US.UTF-8
    - update-locale LANG=en_US.UTF-8
    - dpkg-reconfigure locales
    - locale-gen en_US.UTF-8
    - locale-gen --no-purge --lang en_US.UTF-8
    - dpkg-reconfigure locales
    - export LANGUAGE="en_US.UTF-8"
    - export LC_ALL=en_US.UTF-8
    - echo 'LANGUAGE="en_US.UTF-8"' >> /etc/default/locale
    - echo 'LC_ALL="en_US.UTF-8"' >> /etc/default/locale

- name: Install required system packages
  apt: pkg={{ item }} state=present force=yes
  with_items:
    - curl #download fhirbase archive
    - git #clone fhirbase repository and push
    - unzip #funzip fhirbase archive

- name: Create ubuntu user
  user:
    name: "{{ os.user.name }}"
    shell: /bin/bash
    home: "{{ os.user.home }}"
    state: present

- name: Copy ssh keys to ubuntu user home directory
  copy:
    src: "../../secure/{{ item }}"
    dest: "{{ os.user.home }}/.ssh/{{ item }}"
    owner: "{{ os.user.name }}"
    group: "{{ os.user.name }}"
    mode: "0600"
  with_items:
    - fhirbase_performance_benchmark.pem
    - fhirbase_performance_benchmark.pub
    - fhirbase_performance_documentation
    - fhirbase_performance_documentation.pub

- name: Copy ssh config to ubuntu user home directory
  template:
    src=templates/home/user/.ssh/config.j2
    dest="{{ os.user.home }}/.ssh/config"
    owner="{{ os.user.name }}"
    group="{{ os.user.name }}"
    mode=0644

- name: Copy git global config to ubuntu user home directory
  template:
    src=templates/home/user/gitconfig.j2
    dest="{{ os.user.home }}/.gitconfig"
    owner="{{ os.user.name }}"
    group="{{ os.user.name }}"
    mode=0644

- name: Uninstall PostgreSQL versions unless 9.4
  apt: pkg={{ item }} state=absent force=yes purge=yes
  with_items:
    - postgresql-8.4
    - postgresql-8.4-plv8
    - postgresql-client-8.4
    - postgresql-contrib-8.4

    - postgresql-9.0
    - postgresql-9.0-plv8
    - postgresql-client-9.0
    - postgresql-contrib-9.0

    - postgresql-9.1
    - postgresql-9.1-plv8
    - postgresql-client-9.1
    - postgresql-contrib-9.1

    - postgresql-9.2
    - postgresql-9.2-plv8
    - postgresql-client-9.2
    - postgresql-contrib-9.2

    - postgresql-9.3
    - postgresql-9.3-plv8
    - postgresql-client-9.3
    - postgresql-contrib-9.3

    - postgresql-9.5
    - postgresql-9.5-plv8
    - postgresql-client-9.5
    - postgresql-contrib-9.5

- name: Install PostgreSQl 9.4
  apt: pkg={{ item }} state=present force=yes
  with_items:
    - libpq-dev
    - postgresql-9.4
    - postgresql-9.4-plv8
    - postgresql-contrib-9.4
    - python-psycopg2

- name: Stop PostgreSQL
  service: name=postgresql state=stopped

- name: PostgreSQl should use right port
  lineinfile: dest="{{ postgres.conf }}"
              regexp="^port *= *[0-9]+"
              line="port = {{ postgres.port }}"
              state=present
              backup=yes
  sudo_user: "{{ postgres.system_user }}"

- name: PostgreSQl should log all statements
  lineinfile: dest="{{ postgres.conf }}" line="log_statement = 'all'"
  sudo_user: "{{ postgres.system_user }}"

- name: PostgreSQl should log statements with any durations
  lineinfile: dest="{{ postgres.conf }}" line="log_min_duration_statement = 0"
  sudo_user: "{{ postgres.system_user }}"

- name: Start PostgreSQL
  service: name=postgresql state=started

- name: Create PostgreSQL fhirbase user
  postgresql_user: name={{ postgres.user }}
                   password={{ postgres.password }}
                   role_attr_flags=SUPERUSER
                   login_user=postgres
                   state=present
  sudo_user: postgres
